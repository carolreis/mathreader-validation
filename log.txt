2020-06-21 18:56:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:56:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 18:56:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:56:08 default[20200621t153045]  None
2020-06-21 18:56:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:56:08 default[20200621t153045]  True
2020-06-21 18:56:08 default[20200621t153045]  hein?
2020-06-21 18:56:08 default[20200621t153045]  first
2020-06-21 18:56:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:56:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 18:56:08 default[20200621t153045]  LEX STRING:  1xy5
2020-06-21 18:56:08 default[20200621t153045]  LEX ERROR:  []
2020-06-21 18:56:08 default[20200621t153045]  no more errors?
2020-06-21 18:56:08 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 18:56:08 default[20200621t153045]  =======================================
2020-06-21 18:56:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:56:08 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 18:56:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:56:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 18:56:08 default[20200621t153045]  YACC ERROR:  []
2020-06-21 18:57:53 default[20200621t153045]  "GET / HTTP/1.1" 200
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/bower_components/drawingboard.js/dist/drawingboard.min.css HTTP/1.1" 204
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/bower_components/drawingboard.js/dist/drawingboard.js HTTP/1.1" 204
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/style.css HTTP/1.1" 204
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/images/spinner.gif HTTP/1.1" 204
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/bower_components/simple-undo/lib/simple-undo.js HTTP/1.1" 204
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/bower_components/jquery/dist/jquery.min.js HTTP/1.1" 204
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/js/recognize.js HTTP/1.1" 204
2020-06-21 18:57:54 default[20200621t153045]  "GET /static/images/5.jpg HTTP/1.1" 204
2020-06-21 18:57:55 default[20200621t153045]  "GET /favicon.ico HTTP/1.1" 404
2020-06-21 18:58:06 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 18:58:06 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:06 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 18:58:06 default[20200621t153045]
2020-06-21 18:58:06 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:06 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:06 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 18:58:06 default[20200621t153045]
2020-06-21 18:58:07 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:07 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 18:58:07 default[20200621t153045]
2020-06-21 18:58:07 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:07 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:07 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 18:58:07 default[20200621t153045]
2020-06-21 18:58:07 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:07 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 18:58:07 default[20200621t153045]
2020-06-21 18:58:07 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:07 default[20200621t153045]  25
2020-06-21 18:58:07 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:07 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: x
2020-06-21 18:58:07 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  1
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 1
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  5
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 5
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]
2020-06-21 18:58:08 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 18:58:08 default[20200621t153045]
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 18:58:08 default[20200621t153045]  check() antes do for
2020-06-21 18:58:08 default[20200621t153045]  check() depois do for
2020-06-21 18:58:08 default[20200621t153045]  depois latex string
2020-06-21 18:58:08 default[20200621t153045]  depois latex string
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  Latex List:
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  ['1', 'x', '5']
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  Latex String: 1x5
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  None
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  True
2020-06-21 18:58:08 default[20200621t153045]  hein?
2020-06-21 18:58:08 default[20200621t153045]  first
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 18:58:08 default[20200621t153045]  LEX STRING:  1x5
2020-06-21 18:58:08 default[20200621t153045]  LEX ERROR:  []
2020-06-21 18:58:08 default[20200621t153045]  no more errors?
2020-06-21 18:58:08 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 18:58:08 default[20200621t153045]  =======================================
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 18:58:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:08 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 18:58:08 default[20200621t153045]  YACC ERROR:  []
2020-06-21 18:58:25 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 18:58:25 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:25 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 18:58:25 default[20200621t153045]
2020-06-21 18:58:25 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:25 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:25 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 18:58:25 default[20200621t153045]
2020-06-21 18:58:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:26 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 18:58:26 default[20200621t153045]
2020-06-21 18:58:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:26 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 18:58:26 default[20200621t153045]
2020-06-21 18:58:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:26 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 18:58:26 default[20200621t153045]
2020-06-21 18:58:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:26 default[20200621t153045]  25
2020-06-21 18:58:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:26 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: x
2020-06-21 18:58:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  2
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  3
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]
2020-06-21 18:58:27 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 18:58:27 default[20200621t153045]
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 18:58:27 default[20200621t153045]  check() antes do for
2020-06-21 18:58:27 default[20200621t153045]  check() depois do for
2020-06-21 18:58:27 default[20200621t153045]  depois latex string
2020-06-21 18:58:27 default[20200621t153045]  depois latex string
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  Latex List:
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  ['2', 'x', '3']
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  Latex String: 2x3
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  None
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  True
2020-06-21 18:58:27 default[20200621t153045]  hein?
2020-06-21 18:58:27 default[20200621t153045]  first
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 18:58:27 default[20200621t153045]  LEX STRING:  2x3
2020-06-21 18:58:27 default[20200621t153045]  LEX ERROR:  []
2020-06-21 18:58:27 default[20200621t153045]  no more errors?
2020-06-21 18:58:27 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 18:58:27 default[20200621t153045]  =======================================
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 18:58:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:27 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 18:58:27 default[20200621t153045]  YACC ERROR:  []
2020-06-21 18:58:49 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:49 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 18:58:49 default[20200621t153045]
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:49 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 18:58:49 default[20200621t153045]
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:49 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 18:58:49 default[20200621t153045]
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:49 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 18:58:49 default[20200621t153045]
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:49 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 18:58:49 default[20200621t153045]
2020-06-21 18:58:49 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:50 default[20200621t153045]  5
2020-06-21 18:58:50 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:50 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 5
2020-06-21 18:58:50 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:50 default[20200621t153045]  2
2020-06-21 18:58:50 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:50 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 18:58:50 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 18:58:51 default[20200621t153045]  check() antes do for
2020-06-21 18:58:51 default[20200621t153045]  check() depois do for
2020-06-21 18:58:51 default[20200621t153045]  depois latex string
2020-06-21 18:58:51 default[20200621t153045]  depois latex string
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  Latex List:
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  ['\\sqrt', '{', '5', '^', '{', '2', '}', '}']
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  Latex String: \sqrt{5^{2}}
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  None
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  True
2020-06-21 18:58:51 default[20200621t153045]  hein?
2020-06-21 18:58:51 default[20200621t153045]  first
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 18:58:51 default[20200621t153045]  LEX STRING:  \sqrt{5^{2}}
2020-06-21 18:58:51 default[20200621t153045]  LEX ERROR:  []
2020-06-21 18:58:51 default[20200621t153045]  no more errors?
2020-06-21 18:58:51 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 18:58:51 default[20200621t153045]  =======================================
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 18:58:51 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:58:51 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 18:58:51 default[20200621t153045]  YACC ERROR:  []
2020-06-21 18:59:19 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:20 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 18:59:20 default[20200621t153045]
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:20 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 18:59:20 default[20200621t153045]
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:20 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 18:59:20 default[20200621t153045]
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:20 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 18:59:20 default[20200621t153045]
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:20 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 18:59:20 default[20200621t153045]
2020-06-21 18:59:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:21 default[20200621t153045]  25
2020-06-21 18:59:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:21 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: x
2020-06-21 18:59:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:21 default[20200621t153045]  18
2020-06-21 18:59:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:21 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 18:59:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:21 default[20200621t153045]  5
2020-06-21 18:59:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:21 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 5
2020-06-21 18:59:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  3
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  27
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: z
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  3
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]
2020-06-21 18:59:22 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 18:59:22 default[20200621t153045]
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 18:59:22 default[20200621t153045]  check() antes do for
2020-06-21 18:59:22 default[20200621t153045]  check() depois do for
2020-06-21 18:59:22 default[20200621t153045]  depois latex string
2020-06-21 18:59:22 default[20200621t153045]  depois latex string
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  Latex List:
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  ['3', '^', '{', '3', '}', 'x', '5', '+', 'z']
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  Latex String: 3^{3}x5+z
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  None
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  True
2020-06-21 18:59:22 default[20200621t153045]  hein?
2020-06-21 18:59:22 default[20200621t153045]  first
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 18:59:22 default[20200621t153045]  LEX STRING:  3^{3}x5+z
2020-06-21 18:59:22 default[20200621t153045]  LEX ERROR:  []
2020-06-21 18:59:22 default[20200621t153045]  no more errors?
2020-06-21 18:59:22 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 18:59:22 default[20200621t153045]  =======================================
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 18:59:22 default[20200621t153045]  [config.py] get_configs()
2020-06-21 18:59:22 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 18:59:22 default[20200621t153045]  YACC ERROR:  []
2020-06-21 18:59:24 default[20200621t153045]  [2020-06-21 18:59:24 +0000] [10] [INFO] Handling signal: term
2020-06-21 18:59:24 default[20200621t153045]  [2020-06-21 18:59:24 +0000] [16] [INFO] Worker exiting (pid: 16)
2020-06-21 18:59:25 default[20200621t153045]  [2020-06-21 18:59:25 +0000] [10] [INFO] Shutting down: Master
2020-06-21 19:00:08 default[20200621t153045]  [2020-06-21 19:00:08 +0000] [10] [INFO] Starting gunicorn 20.0.4
2020-06-21 19:00:08 default[20200621t153045]  [2020-06-21 19:00:08 +0000] [10] [INFO] Listening at: http://0.0.0.0:8081 (10)
2020-06-21 19:00:08 default[20200621t153045]  [2020-06-21 19:00:08 +0000] [10] [INFO] Using worker: sync
2020-06-21 19:00:08 default[20200621t153045]  [2020-06-21 19:00:08 +0000] [16] [INFO] Booting worker with pid: 16
2020-06-21 19:00:08 default[20200621t153045]  OpenBLAS WARNING - could not determine the L2 cache size on this system, assuming 256k
2020-06-21 19:00:11 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/random_ops.py:285: SyntaxWarning: "is" with a literal. Did you mean "=="?
2020-06-21 19:00:11 default[20200621t153045]    minval_is_zero = minval is 0  # pylint: disable=literal-comparison
2020-06-21 19:00:11 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/random_ops.py:286: SyntaxWarning: "is" with a literal. Did you mean "=="?
2020-06-21 19:00:11 default[20200621t153045]    maxval_is_one = maxval is 1  # pylint: disable=literal-comparison
2020-06-21 19:00:12 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/ragged/ragged_batch_gather_with_default_op.py:84: SyntaxWarning: "is not" with a literal. Did you mean "!="?
2020-06-21 19:00:12 default[20200621t153045]    if (default_value.shape.ndims is not 0
2020-06-21 19:00:12 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/ragged/ragged_batch_gather_with_default_op.py:85: SyntaxWarning: "is not" with a literal. Did you mean "!="?
2020-06-21 19:00:12 default[20200621t153045]    and default_value.shape.ndims is not 1):
2020-06-21 19:00:16 default[20200621t153045]
2020-06-21 19:00:16 default[20200621t153045]
2020-06-21 19:00:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:16 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:00:16 default[20200621t153045]
2020-06-21 19:00:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:16 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:00:16 default[20200621t153045]
2020-06-21 19:00:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:17 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:00:17 default[20200621t153045]
2020-06-21 19:00:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:17 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:00:17 default[20200621t153045]
2020-06-21 19:00:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:17 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:00:17 default[20200621t153045]
2020-06-21 19:00:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:18 default[20200621t153045]  18
2020-06-21 19:00:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 19:00:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:18 default[20200621t153045]  5
2020-06-21 19:00:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 5
2020-06-21 19:00:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:18 default[20200621t153045]  6
2020-06-21 19:00:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 6
2020-06-21 19:00:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  1
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 1
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  27
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: z
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  24
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: sqrt
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  3
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]
2020-06-21 19:00:19 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:00:19 default[20200621t153045]
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:00:19 default[20200621t153045]  check() antes do for
2020-06-21 19:00:19 default[20200621t153045]  check() depois do for
2020-06-21 19:00:19 default[20200621t153045]  depois latex string
2020-06-21 19:00:19 default[20200621t153045]  depois latex string
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  Latex List:
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  ['z', 'above', '{', '3', '}', '5', '+', '1', '6', '{', '\\sqrt', '}']
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  Latex String: zabove{3}5+16{\sqrt}
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  None
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  True
2020-06-21 19:00:19 default[20200621t153045]  hein?
2020-06-21 19:00:19 default[20200621t153045]  first
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:00:19 default[20200621t153045]  LEX STRING:  zabove{3}5+16{\sqrt}
2020-06-21 19:00:19 default[20200621t153045]  LEX ERROR:  LexToken(error,'ove{3}5+16{\\sqrt}',1,3)
2020-06-21 19:00:19 default[20200621t153045]  LEX ERROR:  LexToken(error,'ve{3}5+16{\\sqrt}',1,4)
2020-06-21 19:00:19 default[20200621t153045]  LEX ERROR:  LexToken(error,'e{3}5+16{\\sqrt}',1,5)
2020-06-21 19:00:19 default[20200621t153045]  LEX ERROR:  [('o', 3), ('v', 4), ('e', 5)]
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | First error found in lex.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating all errors and creating a data structure.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | List of lex errors:
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [('o', 3), ('v', 4), ('e', 5)]
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating error in latex_string.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Searching token (in latex) with position returned in error.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating error in latex_string.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Searching token (in latex) with position returned in error.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating error in latex_string.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Searching token (in latex) with position returned in error.
2020-06-21 19:00:19 default[20200621t153045]  first error: attempt....
2020-06-21 19:00:19 default[20200621t153045]  latex list:  ['z', 'above', '{', '3', '}', '5', '+', '1', '6', '{', '\\sqrt', '}']
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] self.__attempt_to_fix_error() | Tries to fix the error.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [base_grammar.py] correct_grammar_lex()
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | List of errors:
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  []
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] self.__attempt_to_fix_error() | Save errors in history.
2020-06-21 19:00:19 default[20200621t153045]  no more errors?
2020-06-21 19:00:19 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:00:19 default[20200621t153045]  =======================================
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:00:19 default[20200621t153045]  LEX ERROR:  LexToken(error,'ove{3}5+16{\\sqrt}',1,3)
2020-06-21 19:00:19 default[20200621t153045]  LEX ERROR:  LexToken(error,'ve{3}5+16{\\sqrt}',1,4)
2020-06-21 19:00:19 default[20200621t153045]  LEX ERROR:  LexToken(error,'e{3}5+16{\\sqrt}',1,5)
2020-06-21 19:00:19 default[20200621t153045]  Syntax error in input! LexToken(CLOSEDC,'}',1,19)
2020-06-21 19:00:19 default[20200621t153045]  YACC ERROR:  [{'lexpos': 19, 'lineno': 1, 'type': 'CLOSEDC', 'value': '}'}]
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [check_grammar_sintax.py] __locate_grammar_error() | Locating all errors and creating a data structure.
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [base_grammar.py] correct_grammar_lex()
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | List of errors:
2020-06-21 19:00:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:00:19 default[20200621t153045]  []
2020-06-21 19:00:19 default[20200621t153045]  check() e:  cannot unpack non-iterable NoneType object
2020-06-21 19:00:19 default[20200621t153045]  [api.py] __to_parse | Exception:
2020-06-21 19:00:19 default[20200621t153045]  [api.py] recognize | Exception:
2020-06-21 19:01:02 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:02 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:01:02 default[20200621t153045]
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:02 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:01:02 default[20200621t153045]
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:02 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:01:02 default[20200621t153045]
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:02 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:01:02 default[20200621t153045]
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:02 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:01:02 default[20200621t153045]
2020-06-21 19:01:02 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:03 default[20200621t153045]  5
2020-06-21 19:01:03 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:03 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 5
2020-06-21 19:01:03 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:03 default[20200621t153045]  25
2020-06-21 19:01:03 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:03 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: x
2020-06-21 19:01:03 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  2
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  22
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: m
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  7
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 7
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]
2020-06-21 19:01:04 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:01:04 default[20200621t153045]
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:01:04 default[20200621t153045]  check() antes do for
2020-06-21 19:01:04 default[20200621t153045]  check() depois do for
2020-06-21 19:01:04 default[20200621t153045]  depois latex string
2020-06-21 19:01:04 default[20200621t153045]  depois latex string
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  Latex List:
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  ['2', 'above', '{', '7', '}', 'x', '5', 'm']
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  Latex String: 2above{7}x5m
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  None
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  True
2020-06-21 19:01:04 default[20200621t153045]  hein?
2020-06-21 19:01:04 default[20200621t153045]  first
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:01:04 default[20200621t153045]  LEX STRING:  2above{7}x5m
2020-06-21 19:01:04 default[20200621t153045]  LEX ERROR:  LexToken(error,'ove{7}x5m',1,3)
2020-06-21 19:01:04 default[20200621t153045]  LEX ERROR:  LexToken(error,'ve{7}x5m',1,4)
2020-06-21 19:01:04 default[20200621t153045]  LEX ERROR:  LexToken(error,'e{7}x5m',1,5)
2020-06-21 19:01:04 default[20200621t153045]  LEX ERROR:  [('o', 3), ('v', 4), ('e', 5)]
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | First error found in lex.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating all errors and creating a data structure.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | List of lex errors:
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [('o', 3), ('v', 4), ('e', 5)]
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating error in latex_string.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Searching token (in latex) with position returned in error.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating error in latex_string.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Searching token (in latex) with position returned in error.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Locating error in latex_string.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] __locate_lex_error() | Searching token (in latex) with position returned in error.
2020-06-21 19:01:04 default[20200621t153045]  first error: attempt....
2020-06-21 19:01:04 default[20200621t153045]  latex list:  ['2', 'above', '{', '7', '}', 'x', '5', 'm']
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] self.__attempt_to_fix_error() | Tries to fix the error.
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [base_grammar.py] correct_grammar_lex()
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | List of errors:
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  []
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] self.__attempt_to_fix_error() | Save errors in history.
2020-06-21 19:01:04 default[20200621t153045]  no more errors?
2020-06-21 19:01:04 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:01:04 default[20200621t153045]  =======================================
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:01:04 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:01:04 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:01:04 default[20200621t153045]  LEX ERROR:  LexToken(error,'ove{7}x5m',1,3)
2020-06-21 19:01:04 default[20200621t153045]  LEX ERROR:  LexToken(error,'ve{7}x5m',1,4)
2020-06-21 19:01:04 default[20200621t153045]  LEX ERROR:  LexToken(error,'e{7}x5m',1,5)
2020-06-21 19:01:04 default[20200621t153045]  YACC ERROR:  []
2020-06-21 19:01:55 default[20200621t153045]  "GET / HTTP/1.1" 200
2020-06-21 19:01:56 default[20200621t153045]  "GET /static/style.css HTTP/1.1" 204
2020-06-21 19:01:56 default[20200621t153045]  "GET /static/js/recognize.js HTTP/1.1" 204
2020-06-21 19:01:56 default[20200621t153045]  "GET /static/bower_components/drawingboard.js/dist/drawingboard.min.css HTTP/1.1" 204
2020-06-21 19:01:56 default[20200621t153045]  "GET /static/bower_components/jquery/dist/jquery.min.js HTTP/1.1" 204
2020-06-21 19:01:56 default[20200621t153045]  "GET /static/bower_components/simple-undo/lib/simple-undo.js HTTP/1.1" 204
2020-06-21 19:01:56 default[20200621t153045]  "GET /static/bower_components/drawingboard.js/dist/drawingboard.js HTTP/1.1" 204
2020-06-21 19:01:58 default[20200621t153045]  "GET /static/images/5.jpg HTTP/1.1" 204
2020-06-21 19:02:24 default[20200621t153045]  "GET / HTTP/1.1" 200
2020-06-21 19:02:24 default[20200621t153045]  "GET /static/js/recognize.js HTTP/1.1" 204
2020-06-21 19:02:25 default[20200621t153045]  "GET /static/bower_components/drawingboard.js/dist/drawingboard.js HTTP/1.1" 204
2020-06-21 19:02:25 default[20200621t153045]  "GET /static/bower_components/drawingboard.js/dist/drawingboard.min.css HTTP/1.1" 204
2020-06-21 19:02:25 default[20200621t153045]  "GET /static/bower_components/jquery/dist/jquery.min.js HTTP/1.1" 204
2020-06-21 19:02:25 default[20200621t153045]  "GET /static/images/spinner.gif HTTP/1.1" 204
2020-06-21 19:02:25 default[20200621t153045]  "GET /static/style.css HTTP/1.1" 204
2020-06-21 19:02:25 default[20200621t153045]  "GET /static/bower_components/simple-undo/lib/simple-undo.js HTTP/1.1" 204
2020-06-21 19:02:25 default[20200621t153045]  "GET /favicon.ico HTTP/1.1" 404
2020-06-21 19:02:25 default[20200621t153045]  "GET /static/images/5.jpg HTTP/1.1" 204
2020-06-21 19:02:31 default[20200621t153045]  "GET / HTTP/1.1" 200
2020-06-21 19:02:38 default[20200621t153045]  "GET / HTTP/1.1" 200
2020-06-21 19:02:56 default[20200621t153045]  "GET / HTTP/1.1" 200
2020-06-21 19:03:16 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 19:03:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:16 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:03:16 default[20200621t153045]
2020-06-21 19:03:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:16 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:03:16 default[20200621t153045]
2020-06-21 19:03:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:17 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:03:17 default[20200621t153045]
2020-06-21 19:03:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:17 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:03:17 default[20200621t153045]
2020-06-21 19:03:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:17 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:03:17 default[20200621t153045]
2020-06-21 19:03:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:17 default[20200621t153045]  29
2020-06-21 19:03:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:17 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: .
2020-06-21 19:03:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:18 default[20200621t153045]  11
2020-06-21 19:03:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: -
2020-06-21 19:03:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:18 default[20200621t153045]  18
2020-06-21 19:03:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 19:03:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:18 default[20200621t153045]  25
2020-06-21 19:03:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: x
2020-06-21 19:03:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:19 default[20200621t153045]  5
2020-06-21 19:03:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 5
2020-06-21 19:03:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:19 default[20200621t153045]  2
2020-06-21 19:03:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:03:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:19 default[20200621t153045]  3
2020-06-21 19:03:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 19:03:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:20 default[20200621t153045]  13
2020-06-21 19:03:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:20 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: )
2020-06-21 19:03:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:20 default[20200621t153045]  3
2020-06-21 19:03:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:20 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 19:03:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:20 default[20200621t153045]  3
2020-06-21 19:03:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:20 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 19:03:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  24
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: sqrt
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  4
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]
2020-06-21 19:03:21 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:03:21 default[20200621t153045]
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:03:21 default[20200621t153045]  check() antes do for
2020-06-21 19:03:21 default[20200621t153045]  check() depois do for
2020-06-21 19:03:21 default[20200621t153045]  depois latex string
2020-06-21 19:03:21 default[20200621t153045]  depois latex string
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  Latex List:
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  ['3', 'x', '2', '^', '{', '4', '}', '\\frac', '\\sqrt', '{', '3', '^', '{', '3', '}', '}', '+', ')', '5']
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  Latex String: 3x2^{4}\frac\sqrt{3^{3}}+)5
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  None
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  True
2020-06-21 19:03:21 default[20200621t153045]  hein?
2020-06-21 19:03:21 default[20200621t153045]  first
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:03:21 default[20200621t153045]  LEX STRING:  3x2^{4}\frac\sqrt{3^{3}}+)5
2020-06-21 19:03:21 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:03:21 default[20200621t153045]  no more errors?
2020-06-21 19:03:21 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:03:21 default[20200621t153045]  =======================================
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:03:21 default[20200621t153045]  Syntax error in input! LexToken(SQRT,'\\sqrt',1,12)
2020-06-21 19:03:21 default[20200621t153045]  Syntax error in input! LexToken(CLOSEDP,')',1,25)
2020-06-21 19:03:21 default[20200621t153045]  YACC ERROR:  [{'lexpos': 12, 'lineno': 1, 'type': 'SQRT', 'value': '\\sqrt'}, {'lexpos': 25, 'lineno': 1, 'type': 'CLOSEDP', 'value': ')'}]
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_sintax.py] __locate_grammar_error() | Locating all errors and creating a data structure.
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex()
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | List of errors:
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [{'pos': 12, 'pos_list': 8, 'label': '\\sqrt', 'prediction': array([[1.9252646e-15, 3.3670926e-12, 2.7596150e-14, 3.9466509e-15,
2020-06-21 19:03:21 default[20200621t153045]          1.7665688e-13, 1.0377560e-09, 1.3177320e-13, 7.9628077e-14,
2020-06-21 19:03:21 default[20200621t153045]          1.6743770e-16, 1.5843078e-15, 5.1268469e-11, 2.6370247e-07,
2020-06-21 19:03:21 default[20200621t153045]          2.3720603e-13, 2.3463603e-18, 8.3331372e-13, 1.0385786e-15,
2020-06-21 19:03:21 default[20200621t153045]          2.2939723e-13, 6.7180618e-16, 3.4813770e-09, 1.6657963e-15,
2020-06-21 19:03:21 default[20200621t153045]          1.8473579e-14, 3.6307246e-15, 2.2540795e-12, 7.3202173e-12,
2020-06-21 19:03:21 default[20200621t153045]          9.9999976e-01, 9.8022946e-13, 1.2242904e-12, 3.0887116e-15,
2020-06-21 19:03:21 default[20200621t153045]          7.2592231e-15, 1.4595473e-18, 4.4226323e-17]], dtype=float32), 'attempts': [12]}, {'pos': 25, 'pos_list': 17, 'label': ')', 'prediction': array([[1.2742874e-04, 3.1294724e-01, 3.0959913e-04, 1.3863266e-04,
2020-06-21 19:03:21 default[20200621t153045]          1.0425192e-03, 9.4663759e-05, 2.7292950e-05, 1.1458212e-03,
2020-06-21 19:03:21 default[20200621t153045]          4.1450162e-06, 4.7196005e-05, 3.2706284e-05, 2.7997440e-04,
2020-06-21 19:03:21 default[20200621t153045]          2.4151176e-03, 6.5997982e-01, 1.6503152e-06, 1.2622437e-03,
2020-06-21 19:03:21 default[20200621t153045]          1.1046000e-05, 8.7981401e-03, 4.1361772e-03, 1.2575272e-04,
2020-06-21 19:03:21 default[20200621t153045]          3.2062843e-04, 2.8286563e-06, 4.3946773e-05, 4.9533142e-04,
2020-06-21 19:03:21 default[20200621t153045]          5.0345454e-05, 4.4168264e-04, 5.0339838e-03, 2.3814020e-04,
2020-06-21 19:03:21 default[20200621t153045]          4.3089432e-04, 9.5331825e-07, 1.4144442e-05]], dtype=float32), 'attempts': [25]}]
2020-06-21 19:03:21 default[20200621t153045]  index:  0
2020-06-21 19:03:21 default[20200621t153045]  pos:  12
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Error position
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Reset prediction of current symbol
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Gets new indx and prediction from next index with higher prediction
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | New symbol identification: -
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Updated symbol prediction
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Store new index attempt
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Updated 'latex' and 'latex_list'. It is NOT a copy so, it is already updated.
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Creating new 'latex_string' from 'latex_list'
2020-06-21 19:03:21 default[20200621t153045]  new:  3x2^{4}\frac-{3^{3}}+)5
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 1
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  None
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  True
2020-06-21 19:03:21 default[20200621t153045]  hein?
2020-06-21 19:03:21 default[20200621t153045]  first
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:03:21 default[20200621t153045]  LEX STRING:  3x2^{4}\frac-{3^{3}}+)5
2020-06-21 19:03:21 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:03:21 default[20200621t153045]  no more errors?
2020-06-21 19:03:21 default[20200621t153045]  Syntax error in input! LexToken(MIN,'-',1,12)
2020-06-21 19:03:21 default[20200621t153045]  Syntax error in input! LexToken(CLOSEDP,')',1,21)
2020-06-21 19:03:21 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:03:21 default[20200621t153045]  Sintatic error
2020-06-21 19:03:21 default[20200621t153045]  [{'lexpos': 12, 'lineno': 1, 'type': 'MIN', 'value': '-'}, {'lexpos': 21, 'lineno': 1, 'type': 'CLOSEDP', 'value': ')'}]
2020-06-21 19:03:21 default[20200621t153045]  check() e:  'lexpos'
2020-06-21 19:03:21 default[20200621t153045]  [api.py] __to_parse | Exception:
2020-06-21 19:03:21 default[20200621t153045]  [api.py] recognize | Exception:
2020-06-21 19:04:54 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:54 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:04:54 default[20200621t153045]
2020-06-21 19:04:54 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:54 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:54 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:04:54 default[20200621t153045]
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:04:56 default[20200621t153045]
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:04:56 default[20200621t153045]
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:04:56 default[20200621t153045]
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  27
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: z
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  30
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:56 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: *
2020-06-21 19:04:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:57 default[20200621t153045]  4
2020-06-21 19:04:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:04:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:57 default[20200621t153045]  11
2020-06-21 19:04:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: -
2020-06-21 19:04:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:57 default[20200621t153045]  10
2020-06-21 19:04:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: =
2020-06-21 19:04:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:58 default[20200621t153045]  30
2020-06-21 19:04:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:58 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: *
2020-06-21 19:04:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:58 default[20200621t153045]  19
2020-06-21 19:04:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:58 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: a
2020-06-21 19:04:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  2
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  24
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: sqrt
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  4
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]
2020-06-21 19:04:59 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:04:59 default[20200621t153045]
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:04:59 default[20200621t153045]  check() antes do for
2020-06-21 19:04:59 default[20200621t153045]  check() depois do for
2020-06-21 19:04:59 default[20200621t153045]  depois latex string
2020-06-21 19:04:59 default[20200621t153045]  depois latex string
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  Latex List:
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  ['2', '\\cdot', '4', '{', '4', '}', '=', '^', '{', '\\sqrt', '{', 'a', '}', '}']
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  Latex String: 2\cdot4{4}=^{\sqrt{a}}
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  None
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  True
2020-06-21 19:04:59 default[20200621t153045]  hein?
2020-06-21 19:04:59 default[20200621t153045]  first
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:04:59 default[20200621t153045]  LEX STRING:  2\cdot4{4}=^{\sqrt{a}}
2020-06-21 19:04:59 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:04:59 default[20200621t153045]  no more errors?
2020-06-21 19:04:59 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:04:59 default[20200621t153045]  =======================================
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:04:59 default[20200621t153045]  Syntax error in input! LexToken(POW,'^',1,11)
2020-06-21 19:04:59 default[20200621t153045]  YACC ERROR:  [{'lexpos': 11, 'lineno': 1, 'type': 'POW', 'value': '^'}]
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [check_grammar_sintax.py] __locate_grammar_error() | Locating all errors and creating a data structure.
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex()
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | List of errors:
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [{'pos': 11, 'pos_list': 7, 'label': '^', 'prediction': [], 'attempts': [11]}]
2020-06-21 19:04:59 default[20200621t153045]  index:  0
2020-06-21 19:04:59 default[20200621t153045]  pos:  11
2020-06-21 19:04:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:04:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Error position
2020-06-21 19:04:59 default[20200621t153045]  check() e:  cannot unpack non-iterable NoneType object
2020-06-21 19:04:59 default[20200621t153045]  [api.py] __to_parse | Exception:
2020-06-21 19:04:59 default[20200621t153045]  [api.py] recognize | Exception:
2020-06-21 19:05:26 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:27 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:05:27 default[20200621t153045]
2020-06-21 19:05:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:27 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:05:27 default[20200621t153045]
2020-06-21 19:05:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:27 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:05:27 default[20200621t153045]
2020-06-21 19:05:27 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  2
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  30
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: *
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  3
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]
2020-06-21 19:05:28 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:05:28 default[20200621t153045]
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:05:28 default[20200621t153045]  check() antes do for
2020-06-21 19:05:28 default[20200621t153045]  check() depois do for
2020-06-21 19:05:28 default[20200621t153045]  depois latex string
2020-06-21 19:05:28 default[20200621t153045]  depois latex string
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  Latex List:
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  ['3', '\\cdot', '2']
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  Latex String: 3\cdot2
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  None
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  True
2020-06-21 19:05:28 default[20200621t153045]  hein?
2020-06-21 19:05:28 default[20200621t153045]  first
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:05:28 default[20200621t153045]  LEX STRING:  3\cdot2
2020-06-21 19:05:28 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:05:28 default[20200621t153045]  no more errors?
2020-06-21 19:05:28 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:05:28 default[20200621t153045]  =======================================
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:05:28 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:05:28 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:05:28 default[20200621t153045]  YACC ERROR:  []
2020-06-21 19:06:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:08 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:06:08 default[20200621t153045]
2020-06-21 19:06:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:08 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:08 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:06:08 default[20200621t153045]
2020-06-21 19:06:10 default[20200621t153045]  ractangle
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:06:10 default[20200621t153045]
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:06:10 default[20200621t153045]
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:06:10 default[20200621t153045]
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  26
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: y
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  4
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:10 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:06:10 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:11 default[20200621t153045]  30
2020-06-21 19:06:11 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: *
2020-06-21 19:06:11 default[20200621t153045]  11
2020-06-21 19:06:11 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:11 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: -
2020-06-21 19:06:11 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:12 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:12 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:06:12 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:12 default[20200621t153045]  30
2020-06-21 19:06:12 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:12 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: *
2020-06-21 19:06:12 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  3
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]
2020-06-21 19:06:13 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:06:13 default[20200621t153045]
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:06:13 default[20200621t153045]  check() antes do for
2020-06-21 19:06:13 default[20200621t153045]  check() depois do for
2020-06-21 19:06:13 default[20200621t153045]  depois latex string
2020-06-21 19:06:13 default[20200621t153045]  depois latex string
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  Latex List:
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  ['\\frac', '{', '3', '\\cdot', '2', '}', '{', '\\cdot', '{', '4', 'y', '5', '}', '}']
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  Latex String: \frac{3\cdot2}{\cdot{4y5}}
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  None
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  True
2020-06-21 19:06:13 default[20200621t153045]  hein?
2020-06-21 19:06:13 default[20200621t153045]  first
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:06:13 default[20200621t153045]  LEX STRING:  \frac{3\cdot2}{\cdot{4y5}}
2020-06-21 19:06:13 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:06:13 default[20200621t153045]  no more errors?
2020-06-21 19:06:13 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:06:13 default[20200621t153045]  =======================================
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:06:13 default[20200621t153045]  Syntax error in input! LexToken(CDOT,'\\cdot',1,15)
2020-06-21 19:06:13 default[20200621t153045]  Syntax error in input! LexToken(CLOSEDC,'}',1,25)
2020-06-21 19:06:13 default[20200621t153045]  YACC ERROR:  [{'lexpos': 15, 'lineno': 1, 'type': 'CDOT', 'value': '\\cdot'}, {'lexpos': 25, 'lineno': 1, 'type': 'CLOSEDC', 'value': '}'}]
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [check_grammar_sintax.py] __locate_grammar_error() | Locating all errors and creating a data structure.
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [base_grammar.py] correct_grammar_lex()
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | List of errors:
2020-06-21 19:06:13 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:06:13 default[20200621t153045]  []
2020-06-21 19:06:13 default[20200621t153045]  check() e:  cannot unpack non-iterable NoneType object
2020-06-21 19:06:13 default[20200621t153045]  [api.py] __to_parse | Exception:
2020-06-21 19:06:13 default[20200621t153045]  [api.py] recognize | Exception:
2020-06-21 19:07:14 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:14 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:07:14 default[20200621t153045]
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:14 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:07:14 default[20200621t153045]
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:14 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:07:14 default[20200621t153045]
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:14 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:07:14 default[20200621t153045]
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:14 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:07:14 default[20200621t153045]
2020-06-21 19:07:14 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:15 default[20200621t153045]  18
2020-06-21 19:07:15 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:15 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 19:07:15 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:15 default[20200621t153045]  3
2020-06-21 19:07:15 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:15 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 3
2020-06-21 19:07:15 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:15 default[20200621t153045]  5
2020-06-21 19:07:15 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:15 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 5
2020-06-21 19:07:15 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:16 default[20200621t153045]  24
2020-06-21 19:07:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:16 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: sqrt
2020-06-21 19:07:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:16 default[20200621t153045]  11
2020-06-21 19:07:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:16 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: -
2020-06-21 19:07:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:16 default[20200621t153045]  26
2020-06-21 19:07:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:16 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: y
2020-06-21 19:07:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  2
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  4
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]
2020-06-21 19:07:17 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:07:17 default[20200621t153045]
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:07:17 default[20200621t153045]  check() antes do for
2020-06-21 19:07:17 default[20200621t153045]  check() depois do for
2020-06-21 19:07:17 default[20200621t153045]  depois latex string
2020-06-21 19:07:17 default[20200621t153045]  depois latex string
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  Latex List:
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  ['\\frac', '{', '2', 'y', '4', '}', '{', '3', '+', '\\sqrt', '{', '5', '}', '}']
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  Latex String: \frac{2y4}{3+\sqrt{5}}
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  None
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  True
2020-06-21 19:07:17 default[20200621t153045]  hein?
2020-06-21 19:07:17 default[20200621t153045]  first
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:07:17 default[20200621t153045]  LEX STRING:  \frac{2y4}{3+\sqrt{5}}
2020-06-21 19:07:17 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:07:17 default[20200621t153045]  no more errors?
2020-06-21 19:07:17 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:07:17 default[20200621t153045]  =======================================
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:07:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:07:17 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:07:17 default[20200621t153045]  YACC ERROR:  []
2020-06-21 19:07:17 default[20200621t153045]  [2020-06-21 19:07:17 +0000] [10] [INFO] Handling signal: term
2020-06-21 19:07:17 default[20200621t153045]  [2020-06-21 19:07:17 +0000] [16] [INFO] Worker exiting (pid: 16)
2020-06-21 19:07:18 default[20200621t153045]  [2020-06-21 19:07:18 +0000] [10] [INFO] Shutting down: Master
2020-06-21 19:08:47 default[20200621t153045]  [2020-06-21 19:08:47 +0000] [10] [INFO] Starting gunicorn 20.0.4
2020-06-21 19:08:47 default[20200621t153045]  [2020-06-21 19:08:47 +0000] [10] [INFO] Listening at: http://0.0.0.0:8081 (10)
2020-06-21 19:08:47 default[20200621t153045]  [2020-06-21 19:08:47 +0000] [10] [INFO] Using worker: sync
2020-06-21 19:08:47 default[20200621t153045]  [2020-06-21 19:08:47 +0000] [16] [INFO] Booting worker with pid: 16
2020-06-21 19:08:48 default[20200621t153045]  OpenBLAS WARNING - could not determine the L2 cache size on this system, assuming 256k
2020-06-21 19:08:51 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/random_ops.py:285: SyntaxWarning: "is" with a literal. Did you mean "=="?
2020-06-21 19:08:51 default[20200621t153045]    minval_is_zero = minval is 0  # pylint: disable=literal-comparison
2020-06-21 19:08:51 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/random_ops.py:286: SyntaxWarning: "is" with a literal. Did you mean "=="?
2020-06-21 19:08:51 default[20200621t153045]    maxval_is_one = maxval is 1  # pylint: disable=literal-comparison
2020-06-21 19:08:51 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/ragged/ragged_batch_gather_with_default_op.py:84: SyntaxWarning: "is not" with a literal. Did you mean "!="?
2020-06-21 19:08:51 default[20200621t153045]    if (default_value.shape.ndims is not 0
2020-06-21 19:08:51 default[20200621t153045]  /layers/google.python.pip/pip/tensorflow/python/ops/ragged/ragged_batch_gather_with_default_op.py:85: SyntaxWarning: "is not" with a literal. Did you mean "!="?
2020-06-21 19:08:51 default[20200621t153045]    and default_value.shape.ndims is not 1):
2020-06-21 19:08:55 default[20200621t153045]
2020-06-21 19:08:55 default[20200621t153045]
2020-06-21 19:08:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:55 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:08:55 default[20200621t153045]
2020-06-21 19:08:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:55 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:08:55 default[20200621t153045]
2020-06-21 19:08:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:56 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:08:56 default[20200621t153045]
2020-06-21 19:08:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:56 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:08:56 default[20200621t153045]
2020-06-21 19:08:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:56 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:08:56 default[20200621t153045]
2020-06-21 19:08:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:57 default[20200621t153045]  27
2020-06-21 19:08:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: z
2020-06-21 19:08:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:57 default[20200621t153045]  11
2020-06-21 19:08:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: -
2020-06-21 19:08:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:57 default[20200621t153045]  11
2020-06-21 19:08:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: -
2020-06-21 19:08:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:58 default[20200621t153045]  11
2020-06-21 19:08:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:58 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: -
2020-06-21 19:08:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:58 default[20200621t153045]  25
2020-06-21 19:08:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:58 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: x
2020-06-21 19:08:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:58 default[20200621t153045]  2
2020-06-21 19:08:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:58 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:08:58 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  18
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  4
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  26
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: y
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]
2020-06-21 19:08:59 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:08:59 default[20200621t153045]
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:08:59 default[20200621t153045]  check() antes do for
2020-06-21 19:08:59 default[20200621t153045]  check() depois do for
2020-06-21 19:08:59 default[20200621t153045]  depois latex string
2020-06-21 19:08:59 default[20200621t153045]  depois latex string
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  Latex List:
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  ['y', '{', '=', '}', '\\frac', '{', '2', 'x', '+', '4', '}', '{', 'z', '}']
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  Latex String: y{=}\frac{2x+4}{z}
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  None
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  True
2020-06-21 19:08:59 default[20200621t153045]  hein?
2020-06-21 19:08:59 default[20200621t153045]  first
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:08:59 default[20200621t153045]  LEX STRING:  y{=}\frac{2x+4}{z}
2020-06-21 19:08:59 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:08:59 default[20200621t153045]  no more errors?
2020-06-21 19:08:59 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:08:59 default[20200621t153045]  =======================================
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:08:59 default[20200621t153045]  Syntax error in input! LexToken(EQ,'=',1,2)
2020-06-21 19:08:59 default[20200621t153045]  YACC ERROR:  [{'lexpos': 2, 'lineno': 1, 'type': 'EQ', 'value': '='}]
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_sintax.py] __locate_grammar_error() | Locating all errors and creating a data structure.
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex()
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | List of errors:
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [{'pos': 2, 'pos_list': 2, 'label': '=', 'prediction': array([[6.60854275e-05, 1.04167056e-03, 1.58202660e-03, 3.22190928e-04,
2020-06-21 19:08:59 default[20200621t153045]          1.10800254e-04, 4.28732921e-04, 1.22591082e-05, 3.29003815e-05,
2020-06-21 19:08:59 default[20200621t153045]          2.80713743e-06, 8.42014015e-06, 6.12355769e-02, 9.25707340e-01,
2020-06-21 19:08:59 default[20200621t153045]          1.69539021e-03, 1.04652308e-05, 7.13778400e-06, 2.35888001e-05,
2020-06-21 19:08:59 default[20200621t153045]          1.37620134e-06, 2.40560553e-06, 8.66991468e-05, 2.09300037e-04,
2020-06-21 19:08:59 default[20200621t153045]          2.47328062e-05, 3.97981144e-04, 2.54424615e-03, 1.81079507e-04,
2020-06-21 19:08:59 default[20200621t153045]          1.79038581e-03, 5.64787653e-04, 1.51251925e-05, 7.86877004e-04,
2020-06-21 19:08:59 default[20200621t153045]          3.26602894e-05, 3.78289078e-05, 1.03698962e-03]], dtype=float32), 'attempts': [2]}]
2020-06-21 19:08:59 default[20200621t153045]  index:  0
2020-06-21 19:08:59 default[20200621t153045]  pos:  2
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Error position
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Reset prediction of current symbol
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Gets new indx and prediction from next index with higher prediction
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | New symbol identification: =
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Updated symbol prediction
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Store new index attempt
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Updated 'latex' and 'latex_list'. It is NOT a copy so, it is already updated.
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [base_grammar.py] correct_grammar_lex() | Creating new 'latex_string' from 'latex_list'
2020-06-21 19:08:59 default[20200621t153045]  new:  y{=}\frac{2x+4}{z}
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_sintax.py] check_correct_grammar()
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 1
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  None
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  True
2020-06-21 19:08:59 default[20200621t153045]  hein?
2020-06-21 19:08:59 default[20200621t153045]  first
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:08:59 default[20200621t153045]  LEX STRING:  y{=}\frac{2x+4}{z}
2020-06-21 19:08:59 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:08:59 default[20200621t153045]  no more errors?
2020-06-21 19:08:59 default[20200621t153045]  Syntax error in input! LexToken(EQ,'=',1,2)
2020-06-21 19:08:59 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:08:59 default[20200621t153045]  Sintatic error
2020-06-21 19:08:59 default[20200621t153045]  [{'lexpos': 2, 'lineno': 1, 'type': 'EQ', 'value': '='}]
2020-06-21 19:08:59 default[20200621t153045]  check() e:  'lexpos'
2020-06-21 19:08:59 default[20200621t153045]  [api.py] __to_parse | Exception:
2020-06-21 19:08:59 default[20200621t153045]  [api.py] recognize | Exception:
2020-06-21 19:10:16 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 19:10:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:16 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:10:16 default[20200621t153045]
2020-06-21 19:10:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:16 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:16 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:10:16 default[20200621t153045]
2020-06-21 19:10:17 default[20200621t153045]  ractangle
2020-06-21 19:10:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:17 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:10:17 default[20200621t153045]
2020-06-21 19:10:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:17 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:10:17 default[20200621t153045]
2020-06-21 19:10:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:17 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:10:17 default[20200621t153045]
2020-06-21 19:10:17 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:18 default[20200621t153045]  18
2020-06-21 19:10:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 19:10:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:18 default[20200621t153045]  2
2020-06-21 19:10:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:10:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:18 default[20200621t153045]  4
2020-06-21 19:10:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:18 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:10:18 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:19 default[20200621t153045]  18
2020-06-21 19:10:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:19 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 19:10:19 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:20 default[20200621t153045]  4
2020-06-21 19:10:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:20 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:10:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:20 default[20200621t153045]
2020-06-21 19:10:20 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:10:20 default[20200621t153045]
2020-06-21 19:10:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:20 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:10:20 default[20200621t153045]  check() antes do for
2020-06-21 19:10:20 default[20200621t153045]  check() depois do for
2020-06-21 19:10:20 default[20200621t153045]  depois latex string
2020-06-21 19:10:20 default[20200621t153045]  depois latex string
2020-06-21 19:10:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:20 default[20200621t153045]  Latex List:
2020-06-21 19:10:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:20 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:20 default[20200621t153045]  [check_grammar_lex.py] check_correct_grammar() | attempts: 0
2020-06-21 19:10:20 default[20200621t153045]  YACC ERROR:  []
2020-06-21 19:10:54 default[20200621t153045]  "POST /ajax/recognize/ HTTP/1.1" 200
2020-06-21 19:10:54 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:54 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem da express?o...
2020-06-21 19:10:54 default[20200621t153045]
2020-06-21 19:10:54 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:54 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:54 default[20200621t153045]  [recognize.py] to_recognize | Iniciando pr?-processamento de imagem...
2020-06-21 19:10:54 default[20200621t153045]
2020-06-21 19:10:55 default[20200621t153045]  ractangle
2020-06-21 19:10:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:55 default[20200621t153045]  [recognize.py] to_recognize | Exibindo imagem pr?-processada
2020-06-21 19:10:55 default[20200621t153045]
2020-06-21 19:10:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:55 default[20200621t153045]  [recognize.py] to_recognize | Pr?-processamento de imagem finalizado.
2020-06-21 19:10:55 default[20200621t153045]
2020-06-21 19:10:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:55 default[20200621t153045]  [recognize.py] to_recognize | Iniciando classifica??o dos s?mbolos...
2020-06-21 19:10:55 default[20200621t153045]
2020-06-21 19:10:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:55 default[20200621t153045]  30
2020-06-21 19:10:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:55 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: *
2020-06-21 19:10:55 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:56 default[20200621t153045]  18
2020-06-21 19:10:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:56 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: +
2020-06-21 19:10:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:56 default[20200621t153045]  25
2020-06-21 19:10:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:56 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: x
2020-06-21 19:10:56 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  2
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 2
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  4
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: 4
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  30
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [recognize.py] to_recognize | S?mbolo: *
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]
2020-06-21 19:10:57 default[20200621t153045]  [recognize.py] to_recognize | << Classifica??o dos s?mbolos finalizada.
2020-06-21 19:10:57 default[20200621t153045]
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [check_grammar.py] check()
2020-06-21 19:10:57 default[20200621t153045]  check() antes do for
2020-06-21 19:10:57 default[20200621t153045]  check() depois do for
2020-06-21 19:10:57 default[20200621t153045]  depois latex string
2020-06-21 19:10:57 default[20200621t153045]  depois latex string
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  Latex List:
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  ['4', '\\cdot', '2', '+', '\\cdot', '{', 'x', '}']
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  Latex String: 4\cdot2+\cdot{x}
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex()
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | attempts: 0
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | error list:
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  None
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  True
2020-06-21 19:10:57 default[20200621t153045]  hein?
2020-06-21 19:10:57 default[20200621t153045]  first
2020-06-21 19:10:57 default[20200621t153045]  [config.py] get_configs()
2020-06-21 19:10:57 default[20200621t153045]  [check_grammar_lex.py] check_correct_lex() | There's no previous error. Searching the first one.
2020-06-21 19:10:57 default[20200621t153045]  LEX STRING:  4\cdot2+\cdot{x}
2020-06-21 19:10:57 default[20200621t153045]  LEX ERROR:  []
2020-06-21 19:10:57 default[20200621t153045]  no more errors?
2020-06-21 19:10:57 default[20200621t153045]  check_grammar.py    after check lex
2020-06-21 19:10:57 default[20200621t153045]  =======================================
2020-06-21 19:10:57 default[20200621t153045] 